###########################
# the idea of this config is to:
# build new image
# manually push it to gcr
# update the k8s deployment config file with
#  image:NEW_TAG and evn:VERSION
# apply this new config to the cluster supplied in the KUBECONFIG credentials
###########################

steps:
## Steps for WEB module
  - name: 'gcr.io/cloud-builders/docker'
    id: 'web-image-build'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/web:${TAG_NAME}', 'web/']
  # push this image to gcr
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/web']
    waitFor: ['web-image-build']
    id: 'web-image-push'
  # update k8s config to use new image
  - name: 'gcr.io/google_containers/hyperkube:v1.5.3'
    env: ["KUBECONFIG=/workspace/dev.kubeconfig"]
    entrypoint: ['/hyperkube']
    args: ['kubectl', 'set', 'image', 'deployment/web-deployment', 'web=gcr.io/$PROJECT_ID/web:${TAG_NAME}']
    waitFor: ['web-image-push']
    id: 'web-conf-update'

#  # patch the VERSION env variable
#  - name: 'gcr.io/google_containers/hyperkube:v1.5.3'
#    env: ["KUBECONFIG=/workspace/dev.kubeconfig"]
#    entrypoint: '/hyperkube'
#    args: ['kubectl', 'patch', 'deployment/web-deployment', '-p', '{"spec":{"template":{"spec":{"containers":[{"name":"web","env":[{"name":"VERSION","value":"${TAG_NAME}"}]}]}}}}']

### Steps for APP module
#  - name: 'gcr.io/cloud-builders/docker'
#    id: 'app-image-build'
#    args: ['build', '-t', 'gcr.io/$PROJECT_ID/app:${TAG_NAME}', 'app/']
#  # push new img to gcr
#  - name: 'gcr.io/cloud-builders/docker'
#    id: 'app-image-push'
#    args: ['push', 'gcr.io/$PROJECT_ID/app']
#    waifFor: ['app-image-build']
#  # update conf with new image
#  - name: 'gcr.io/google_containers/hyperkube:v1.5.3'
#    id: 'app-conf-update'
#    waitFor: ['app-image-push']
#    env: ["KUBECONFIG=/workspace/dev.kubeconfig"]
#    entrypoint: '/hyperkube'
#    args: ['kubectl','set', 'image', 'deployment/app-deployment', 'app=gcr.io/$PROJECT_ID/app:${TAG_NAME}']

# Update the cluster with new configuration
#  - name: 'gcr.io/google_containers/hyperkube:v1.5.3'
#    env: ['KUBECONFIG=/workspace/dev.kubeconfig']
#    entrypoint: '/hyperkube'
#    args: ['kubectl','apply', '-f', 'k8s-all-config.yaml']
#    waitFor: ['web-conf-update']