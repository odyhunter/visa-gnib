steps:
   # build new web image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/web:${TAG_NAME}', 'web/' ]
   # push this image to gcr
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/web']
    id: 'web-image-push'
  # update k8s config to use new image
  - name: 'gcr.io/google_containers/hyperkube:v1.5.3'
    env: ["KUBECONFIG=/workspace/kubeconfig"]
    entrypoint: '/hyperkube'
    args: ['kubectl','set', 'image', 'deployment/web-deployment', 'web=gcr.io/$PROJECT_ID/web:${TAG_NAME}']
    id: 'update-conf-web'
    waitFor: ['image-push']

  - name: 'gcr.io/google_containers/hyperkube:v1.5.3'
    env: ["KUBECONFIG=/workspace/kubeconfig"]
    entrypoint: '/hyperkube'
    args: ['kubectl','patch', 'deployment/web-deployment', '{"spec":{"template":{"spec":{"containers":[{"name":"web","env":[{"name":"VERSION","value":${TAG_NAME}}]}]}}}}']


  # build new app image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/app:${TAG_NAME}', 'app/' ]
    id: 'build-app-image'
  # push new img to gcr
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/web']
    id: 'push-app-image'
  # update conf with new image
  - name: 'gcr.io/google_containers/hyperkube:v1.5.3'
    env: ["KUBECONFIG=/workspace/kubeconfig"]
    entrypoint: '/hyperkube'
    args: ['kubectl','set', 'image', 'deployment/app-deployment', 'web=gcr.io/$PROJECT_ID/app:${TAG_NAME}']
    id: 'update-conf-app'
    waitFor: ['push-app-image']

  # update the cluster with new configuration
  - name: 'gcr.io/google_containers/hyperkube:v1.5.3'
    env: ['KUBECONFIG=/workspace/kubeconfig']
    entrypoint: '/hyperkube'
    args: ['kubectl','apply', '-f', 'k8s-all-config.yaml']
    waitFor: ['update-conf-app', 'update-conf-web']